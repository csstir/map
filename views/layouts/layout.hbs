<!DOCTYPE html>
<html>

<head>
  <meta charset='utf-8' />
  <title>Style circles with a data-driven property</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css' rel='stylesheet' />
  <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700' rel='stylesheet'>
  <style>
    body {
      background: #404040;
      color: #f8f8f8;
      font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
      margin: 0;
      padding: 0;
      -webkit-font-smoothing: antialiased;
    }

    /* The page is split between map and sidebar - the sidebar gets 1/3, map
gets 2/3 of the page. You can adjust this to your personal liking. */
    .sidebar {
      width: 33.3333%;
    }

    a.title {
      color: #fff !important;

    }

    .map {
      border-left: 1px solid #fff;
      position: absolute;
      left: 33.3333%;
      width: 66.6666%;
      top: 0;
      bottom: 0;
    }

    .pad2 {
      padding: 20px;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;

      box -webkit-scrollbar-thumb {
        background: #00853e;
        border-radius: 0;
      }

      .clearfix {
        display: block;
      }

      .clearfix::after {
        content: '.';
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
      }

      /* Marker tweaks */
      .mapboxgl-popup-close-button {
        display: none;
      }

      .mapboxgl-popup-content {
        font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
        padding: 0;
        width: 180px;
        color: black !important;
      }

      .mapboxgl-popup-content-wrapper {
        padding: 1%;
      }

      h3.popups {
        color: black;
      }

      .mapboxgl-popup-content h3 {

        color: black !important;
        margin: 0;
        display: block;
        padding: 10px;
        border-radius: 3px 3px 0 0;
        font-weight: 700;
        margin-top: -15px;
      }

      .mapboxgl-popup-content h4 {
        margin: 0;
        display: block;
        padding: 10px;
        font-weight: 400;
        color: black !important;
      }

      .mapboxgl-popup-content div {
        padding: 10px;
      }

      .mapboxgl-container .leaflet-marker-icon {
        cursor: pointer;
      }

      .mapboxgl-popup-anchor-top>.mapboxgl-popup-content {
        margin-top: 15px;
      }

      .mapboxgl-popup-anchor-top>.mapboxgl-popup-tip {
        border-bottom-color: #91c949;
      }

      .marker {
        border: none;
        cursor: pointer;
        height: 56px;
        width: 56px;
        background-image: url(marker.png);
        background-color: rgba(0, 0, 0, 0);
      }
  </style>
</head>

<body>
  <div class='sidebar'>
    <div class='heading'>
      <h1>Our locations</h1>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

    <form action="" method="post" id="rati">

      <select name="value" onchange="this.form.submit()">
        <option value="Places">Places</option>
        <option value="Papers">Papers</option>

      </select>
    </form>

    <script>
      /*
      $(document).ready(function (e) {
        $("[name='value']").on('change', function () {

          $.ajax({
            type: "GET",
            url: "http://localhost:1234",
            crossDomain: true,
            dataType: "json",
            data: $("#rati").serialize(),

          });
        });
      });
      */
    </script>

    <div id="listingTable"></div>
    <a href="javascript:prevPage1()" id="btn_prev1">Prev</a>
    <a href="javascript:nextPage1()" id="btn_next1">Next</a>
    page: <span id="page1"></span>

    <div id='listings' class='listings'></div>
  </div>
  <div id='map' class='map pad2'>Map</div>

  <script>

    results1 = {{{results }}}


    business1 = {{{businesses}}}


    names = {{{ names }}}

    var gloresult;
    gloresult = names;





    mapboxgl.accessToken = 'pk.eyJ1IjoiZ3JlZzE5OTIyIiwiYSI6ImNqcGs1MzFkYTAzMWozcHQ2d3U2dW1yNjYifQ.Lx8JpJQhuTYFTWiVUL5kAg';
    // This adds the map to your page
    var map = new mapboxgl.Map({
      // container id specified in the HTML
      container: 'map',
      // style URL
      style: 'mapbox://styles/mapbox/streets-v9',
      // initial position in [lon, lat] format
      center: [-3.9206, 56.144],
      // initial zoom
      zoom: 5
    });

    var current_page1 = 1;
    var records_per_page1 = 3;
    var zoomthreshold = 4;
  
    changePage1(1)


    map.on("load", function (e) {

         
        
    


      var businessLoc = JSON.stringify(business1)
    
var permittedValues = business1.map(({type, geometry}) => ({type, geometry}));
var newObj = {
  type: "FeatureCollection",
  features: permittedValues
};
    
console.log('new',newObj)




      
        // Add the data to your map as a lyer
        map.addLayer({
          id: 'business_location',
          type: 'symbol',
          minzoom: zoomthreshold,
   
          // Add a GeoJSON source containing place coordinates and information.
          source:{
            type:'geojson',
            data:newObj
          },
          layout: {
             'icon-image': 'restaurant-15',
      'icon-allow-overlap': true,
          }
        });

        console.log(map.style.sourceCaches)


      for (i = 0; i < results1.length; i++) {
        // Add the data to your map as a lyer
        map.addLayer({
          id: 'locations1' + [i],
          type: 'symbol',
           maxzoom: zoomthreshold,
          // Add a GeoJSON source containing place coordinates and information.
          source: {
            type: 'geojson',
            data: results1[i]
          },
          layout: {
            'icon-image': 'circle-stroked-11',
            'icon-allow-overlap': true,
          }
        });
      }
  

          

        })
      
 
      















    function flyToStore(currentFeature) {
      map.flyTo({
        center: currentFeature.geometry.coordinates,
        zoom: 15
      });
    }

    function createPopUp(currentFeature, currentName) {
      var popUps = document.getElementsByClassName('mapboxgl-popup');
      // Check if there is already a popup on the map and if so, remove it
      if (popUps[0]) popUps[0].remove();


      var popup = new mapboxgl.Popup({ className: 'popups', closeOnClick: false })
        .setLngLat(currentFeature.geometry.coordinates)
        .setHTML('<h3 style="color:black">' + currentFeature.place_name + '</h3>' +
          '<div style="margin-top:10px"> </div>' +
          '<h4 style="color:black">' + currentName + '</h4>')
        .addTo(map);
    }


    function prevPage1() {

      if (current_page1 > 1) {
        current_page1--;
        changePage1(current_page1);
      }
    }

    function nextPage1() {


      if (current_page1 < numPages1(result)) {
        current_page1++;
        changePage1(current_page1);
      }
    }

    function changePage1(page) {

      data = results1


      result = names
      var btn_next = document.getElementById("btn_next1");
      var btn_prev = document.getElementById("btn_prev1");
      var listing_table = document.getElementById("listings");
      var page_span = document.getElementById("page1");

      // Validate page
      if (page < 1) page = 1;
      if (page > numPages1(result)) page = numPages1(result);

      listing_table.innerHTML = "";
      for (var i = (page - 1) * records_per_page1; i < (page * records_per_page1) && i < names.length; i++) {
        // Iterate through the list of stores

        var currentFeature = data[i].country_name;
        var currentNameClicked = names[i]
        // Shorten data.feature.properties to just `prop` so we're not
        // writing this long form over and over again.
        var prop = currentFeature
        // Select the listing container in the HTML and append a div
        // with the class 'item' for each store
        var listings = document.getElementById('listings');
        var listing = listings.appendChild(document.createElement('div'));
        listing.className = 'item';
        listing.style = 'margin-top:15px;'
        listing.id = 'listing-' + i;
        // Create a new link with the class 'title' for each store
        // and fill it with the store address
        var link = listing.appendChild(document.createElement('a'));
        link.href = '#';
        link.className = 'title';
        link.dataPosition = i;
        link.namePosition = i;
        link.innerHTML = currentNameClicked;

        // Add an event listener for the links in the sidebar listing
        link.addEventListener('click', function (e) {
          // Update the currentFeature to the store associated with the clicked link
          var clickedListing = data[this.dataPosition];
          var clickedNameClicked = names[this.dataPosition]

          // 1. Fly to the point associated with the clicked link
          flyToStore(clickedListing);
          // 2. Close all other popups and display popup for clicked store
          createPopUp(clickedListing, clickedNameClicked);
          // 3. Highlight listing in sidebar (and remove highlight for all other listings)
          var activeItem = document.getElementsByClassName('active');
          if (activeItem[0]) {
            activeItem[0].classList.remove('active');
          }
          this.parentNode.classList.add('active');
        });
      }

      page_span.innerHTML = page;

      if (page == 1) {
        btn_prev.style.display = "none";
      } else {
        btn_prev.style.display = "inline-block";
      }

      if (page == numPages1(result)) {
        btn_next.style.display = "none";
      } else {
        btn_next.style.display = "inline-block";
      }
    }

    function numPages1(result) {


      return Math.ceil(result.length / records_per_page1);
    }




    
  </script>

</body>

</html>